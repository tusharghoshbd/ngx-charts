{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@tusharghoshbd/ngx-charts/lib/utils/trim-label.helper.ts","ng://@tusharghoshbd/ngx-charts/lib/axes/x-axis/x-axis.component.ts","ng://@tusharghoshbd/ngx-charts/lib/axes/y-axis/y-axis.component.ts","ng://@tusharghoshbd/ngx-charts/lib/axes/axes.module.ts","ng://@tusharghoshbd/ngx-charts/lib/header/header.component.ts","ng://@tusharghoshbd/ngx-charts/lib/header/header.module.ts","ng://@tusharghoshbd/ngx-charts/lib/legend/legend.component.ts","ng://@tusharghoshbd/ngx-charts/lib/legend/legend.module.ts","ng://@tusharghoshbd/ngx-charts/lib/tooltip/tooltip.directive.ts","ng://@tusharghoshbd/ngx-charts/lib/tooltip/tooltip.module.ts","ng://@tusharghoshbd/ngx-charts/lib/utils/color.helper.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-bar/ngx-charts-bar.component.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-bar/ngx-charts-bar.module.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-line/ngx-charts-line.component.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-line/ngx-charts-line.module.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-pie/ngx-charts-pie.component.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-pie/ngx-charts-pie.module.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-combo/ngx-charts-combo.component.ts","ng://@tusharghoshbd/ngx-charts/lib/ngx-charts-combo/ngx-charts-combo.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","trimLabel","max","trim","slice","XAxisComponent","categories","series","xAxisHeightChange","EventEmitter","ticks","ngOnChanges","changes","update","ngOnInit","ngAfterViewInit","_this","setTimeout","xAxisHeight","parseInt","xAxisHeightEl","nativeElement","getBoundingClientRect","height","options","xAxis","emit","barType","yScale","nice","xScale","xTransformRotate","item","labelRotation","bandwidth","yAxis","width","pathDirection","tick","header","Component","args","selector","template","Input","ViewChild","read","ElementRef","static","Output","YAxisComponent","yAxisWidthChange","rightTicks","yAxisWidth","yAxisWidthEl","yAxisHeight","yAxisRightWidth","yAxisRightWidthEl","yRightScale","transform","x","plotBackground","calculateYTextPosition","AxesModule","NgModule","imports","CommonModule","declarations","exports","HeaderComponent","headerHeightChange","headerHeight","headerHeightEl","HeaderModule","LegendComponent","LegendModule","TooltipDirective","el","renderer","offset","onMouseEnter","tooltip","show","onMouseLeave","hide","create","setPosition","addClass","removeClass","window","removeChild","document","body","delay","createElement","appendChild","createText","tooltipTitle","placement","setStyle","top","left","hostPos","tooltipPos","scrollPos","pageYOffset","documentElement","scrollTop","bottom","right","Directive","Renderer2","HostListener","TooltipModule","ColorHelper","generateColorScale","colorList","barColors","groupDataArr","name","colorCode","index","scaleOrdinal","range","domain","ngxChartsBarComponent","element","chartElement","cdr","customOptions","title","subtitle","padding","labelAlign","labelEllipsis","labelEllipsisSize","legend","y","plotOptions","groupBarPadding","innerBarPadding","_options","bars","groupName","defineProperty","obj","undefined","groupBarPaddingBK","innerBarPaddingBK","hostElem","dims","parentNode","style","currentStyle","getComputedStyle","strToNumber","paddingLeft","paddingRight","calPlotBackground","countFlag","getXScale","innerScale","getInnerScale","getYScale","colorHelper","colorScale","map","color","createBar","detectChanges","spacing","scaleBand","paddingInner","paddingOuter","uniqueValue","Set","data","add","min","Math","scaleLinear","bar","group","className","_a","toolTipPlaccement","onResize","event","getViewBox","str","num","match","join","parseFloat","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","ngxChartsBarModule","providers","ngxChartsLineComponent","lines","lineCircle","createLine","line","points","j","ngxChartsLineModule","ngxChartsPieComponent","outerRadius","innerRadius","pies","translation","xOffset","yOffset","calcArc","calculateArc","pieGenerator","pieGeneratorFunc","createPie","pie","d","sort","arc","cornerRadius","outerArc","tempObj","path","startAngle","endAngle","pos","centroid","labelPath","textAnchor","midAngle","PI","innerPos","scale","outerPos","ngxChartsPieModule","ngxChartsComboComponent","rightTitle","rightWidth","leftTitle","getYRightScale","type","ngxChartsComboModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function trimLabel(s, max = 5): string {\r\n  if (typeof s !== 'string') {\r\n    if (typeof s === 'number') {\r\n      return s + '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  s = s.trim();\r\n  if (s.length <= max) {\r\n    return s;\r\n  } else {\r\n    return `${s.slice(0, max)}...`;\r\n  }\r\n}\r\n","import { Component, OnInit, OnChanges, Input, AfterViewInit, ViewChild, Output, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';\n\nimport { trimLabel } from '../../utils/trim-label.helper';\n\n@Component({\n    selector: 'g[x-axis]',\n    templateUrl: './x-axis.component.html',\n    styleUrls: ['./x-axis.component.css']\n})\nexport class XAxisComponent implements OnInit, OnChanges, AfterViewInit {\n\n    @Input() xScale: any;\n    @Input() yScale: any;\n    @Input() options: any;\n\n    @Input() categories: any=[];\n    @Input() series: any=[];\n\n    @ViewChild('xAxisHeightEl', { read: ElementRef, static: false }) xAxisHeightEl: ElementRef;\n    @Output() xAxisHeightChange=new EventEmitter();\n\n    ticks: any[]=[];\n    trimLabel: any;\n    constructor() {\n        this.trimLabel=trimLabel;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // console.log(\"-----------------------\")\n        //console.log(this.options)\n        //console.log(this.xScale)\n        this.update();\n    }\n\n    ngOnInit() { }\n\n    ngAfterViewInit(): void {\n        setTimeout(() => {\n            let xAxisHeight=parseInt(this.xAxisHeightEl.nativeElement.getBoundingClientRect().height, 10)+10;\n            // if (xAxisHeight<50)\n            //     xAxisHeight=50;\n            // console.log(\"x height \", xAxisHeight)\n            if (xAxisHeight!==this.options.xAxis.height) {\n                // console.log(\"ngAfterViewInit\", \"xxxxxxxxxx\", xAxisHeight, this.options.xAxis.height)\n                this.xAxisHeightChange.emit({ xAxisHeight });\n            }\n        }, 0);\n        \n    }\n\n    update() {\n        if (this.options.barType==\"vertical\") {\n            this.ticks=this.yScale.nice().ticks();\n        }\n        else {\n            this.ticks=this.xScale.nice().ticks();\n        }\n        this.ngAfterViewInit();\n    }\n    xTransformRotate(item) {\n        if (this.options.barType==\"vertical\") {\n            return \"rotate(\"+this.options.xAxis.labelRotation+\", \"+(this.xScale(item)+(this.xScale.bandwidth()/2)+this.options.yAxis.width)+\", \"+(this.options.height-20)+\")\";\n        }\n        else {\n            return \"rotate(\"+this.options.xAxis.labelRotation+\", \"+(this.xScale(item)+this.options.yAxis.width)+\", \"+(this.options.height-this.options.xAxis.height+20)+\")\";\n        }\n\n    }\n\n    pathDirection(tick) {\n        return 'M '+(this.xScale(tick)+this.options.yAxis.width)+' '+(this.options.header.height)+' L '+(this.xScale(tick)+this.options.yAxis.width)+' '+(this.options.height-this.options.xAxis.height);\n    }\n\n\n\n\n}\n","import {\r\n    Component, OnInit, Input, OnChanges,\r\n    SimpleChanges, ViewChild, ElementRef,\r\n    Output,EventEmitter\r\n} from \"@angular/core\";\r\nimport { ClassGetter } from '@angular/compiler/src/output/output_ast';\r\nimport { trimLabel } from '../../utils/trim-label.helper';\r\n@Component({\r\n    selector: \"g[y-axis]\",\r\n    templateUrl: \"./y-axis.component.html\",\r\n    styleUrls: [\"./y-axis.component.css\"],\r\n})\r\nexport class YAxisComponent implements OnInit, OnChanges {\r\n    @Input() xScale: any;\r\n    @Input() yScale: any;\r\n    @Input() yRightScale: any;\r\n    @Input() options: any;\r\n\r\n    @Input() categories: any=[];\r\n    @Input() series: any=[];\r\n\r\n    @ViewChild('yAxisWidthEl', { static: true }) yAxisWidthEl: ElementRef;\r\n    @ViewChild('yAxisRightWidthEl', {static:true}) yAxisRightWidthEl: ElementRef;\r\n    @Output() yAxisWidthChange = new EventEmitter();\r\n\r\n    ticks: any[]=[];\r\n    rightTicks: any[]=[];\r\n    \r\n    trimLabel: any;\r\n    constructor() {\r\n        this.trimLabel=trimLabel;\r\n    }\r\n\r\n    ngOnInit() {\r\n        //console.log(this.yScale)\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // console.log(changes)\r\n        // console.log(\"-------------------\")\r\n        // console.log( JSON.stringify(this.yScale('Africa')))\r\n        //console.log(this.yScale(-200))\r\n        this.update();\r\n    }\r\n    ngAfterViewInit(): void {\r\n        \r\n        setTimeout(() => {\r\n            const yAxisWidth=parseInt(this.yAxisWidthEl.nativeElement.getBoundingClientRect().width, 10)+30;\r\n            const yAxisHeight=parseInt(this.yAxisWidthEl.nativeElement.getBoundingClientRect().height, 10)+300;\r\n\r\n            const yAxisRightWidth=parseInt(this.yAxisRightWidthEl.nativeElement.getBoundingClientRect().width, 10)+30;\r\n\r\n            if (yAxisHeight!==this.options.yAxis.height||yAxisWidth!==this.options.yAxis.width) {\r\n                this.yAxisWidthChange.emit({ yAxisWidth, yAxisHeight, yAxisRightWidth });\r\n            }\r\n            //setTimeout(() => this.updateDims());\r\n        }, 0);\r\n    }\r\n\r\n    update() {\r\n        if (this.options.barType==\"vertical\") {\r\n            this.ticks=this.yScale.nice().ticks();\r\n            if(this.yRightScale)\r\n                this.rightTicks=this.yRightScale.nice().ticks();\r\n        }\r\n        else {\r\n            //this.ticks=this.xScale.nice().ticks();\r\n        }\r\n        this.ngAfterViewInit();\r\n    }\r\n\r\n    transform(x) {\r\n        return \"rotate(270, \"+x+\", \"+this.options.height/2+\")\";\r\n    }\r\n    pathDirection(tick) { \r\n        //console.log(tick, this.yScale(tick))\r\n        return 'M '+(this.options.yAxis.width)+' '+(this.yScale(tick)+this.options.header.height)+' L '+(this.options.plotBackground.width + this.options.yAxis.width)+' '+(this.yScale(tick)+this.options.header.height);\r\n    }\r\n    calculateYTextPosition(item) { \r\n        if (this.yScale(item))\r\n            return parseInt(this.yScale(item)+(this.yScale.bandwidth()/2)+this.options.header.height);\r\n        return this.options.header.height;\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { XAxisComponent } from './x-axis/x-axis.component';\r\nimport { YAxisComponent } from './y-axis/y-axis.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [XAxisComponent, YAxisComponent],\r\n  exports: [XAxisComponent, YAxisComponent]\r\n})\r\nexport class AxesModule {}\r\n","import { Component, OnInit, OnChanges, Input,AfterViewInit, ViewChild, Output, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'g[header]',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnChanges, AfterViewInit {\r\n    // @Input() xScale: any;\r\n    // @Input() yScale: any;\r\n    @Input() options: any;\r\n\r\n    // @Input() categories: any=[];\r\n    // @Input() series: any=[];\r\n\r\n    @ViewChild('headerHeightEl', { static: true }) headerHeightEl: ElementRef;\r\n    @Output() headerHeightChange=new EventEmitter();\r\n    constructor() { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // console.log(changes)\r\n        this.update();\r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    ngAfterViewInit(): void {\r\n        let headerHeight=parseInt(this.headerHeightEl.nativeElement.getBoundingClientRect().height, 10)+20;\r\n        // console.log(\"headerHeight \"+headerHeight)\r\n        this.headerHeightChange.emit({ headerHeight });\r\n        //setTimeout(() => this.updateDims());\r\n    }\r\n\r\n    update() {\r\n        //this.ticks=this.xScale.nice().ticks();\r\n    }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HeaderComponent } from './header.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [HeaderComponent],\r\n  exports: [HeaderComponent]\r\n})\r\nexport class HeaderModule {}","import { Component, OnInit, OnChanges, Input,AfterViewInit, ViewChild, Output, EventEmitter, ElementRef, SimpleChanges } from '@angular/core';\r\nimport { trimLabel } from '../utils/trim-label.helper';\r\n@Component({\r\n    selector: 'chart-legend',\r\n    templateUrl: './legend.component.html',\r\n    styleUrls: ['./legend.component.css']\r\n})\r\nexport class LegendComponent implements OnInit, OnChanges, AfterViewInit {\r\n    \r\n    @Input() groupName: any;\r\n    @Input() series: any;\r\n    @Input() options: any;\r\n    trimLabel: any;\r\n    constructor() {\r\n        this.trimLabel=trimLabel;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // console.log(changes)\r\n        this.update();\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    update() {\r\n    }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LegendComponent } from './legend.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [LegendComponent],\r\n  exports: [LegendComponent]\r\n})\r\nexport class LegendModule {}","import { Directive, Input, ElementRef, HostListener, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[tooltip]'\r\n})\r\nexport class TooltipDirective {\r\n    @Input('tooltip') tooltipTitle: string;\r\n    @Input() placement: string;\r\n    @Input() delay: number;\r\n    tooltip: HTMLElement;\r\n    // 호스트 요소와 tooltip 요소 간의 거리\r\n    offset=10;\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\r\n\r\n    @HostListener('mouseenter') onMouseEnter() {\r\n        // console.log(\"onMouseEnter\")\r\n        if (!this.tooltip) { this.show(); }\r\n    }\r\n\r\n    @HostListener('mouseleave') onMouseLeave() {\r\n        // console.log(\"onMouseLeave\")\r\n        if (this.tooltip) { this.hide(); }\r\n    }\r\n\r\n    show() {\r\n        this.create();\r\n        this.setPosition();\r\n        this.renderer.addClass(this.tooltip, 'ng-tooltip-show');\r\n    }\r\n\r\n    hide() {\r\n        this.renderer.removeClass(this.tooltip, 'ng-tooltip-show');\r\n        window.setTimeout(() => {\r\n            this.renderer.removeChild(document.body, this.tooltip);\r\n            this.tooltip=null;\r\n        }, this.delay);\r\n    }\r\n\r\n    create() {\r\n        this.tooltip=this.renderer.createElement('span');\r\n\r\n        this.renderer.appendChild(\r\n            this.tooltip,\r\n            this.renderer.createText(this.tooltipTitle) // textNode\r\n        );\r\n\r\n        this.renderer.appendChild(document.body, this.tooltip);\r\n        // this.renderer.appendChild(this.el.nativeElement, this.tooltip);\r\n\r\n        this.renderer.addClass(this.tooltip, 'ng-tooltip');\r\n        this.renderer.addClass(this.tooltip, `ng-tooltip-${this.placement}`);\r\n\r\n        // delay 설정\r\n        this.renderer.setStyle(this.tooltip, '-webkit-transition', `opacity ${this.delay}ms`);\r\n        this.renderer.setStyle(this.tooltip, '-moz-transition', `opacity ${this.delay}ms`);\r\n        this.renderer.setStyle(this.tooltip, '-o-transition', `opacity ${this.delay}ms`);\r\n        this.renderer.setStyle(this.tooltip, 'transition', `opacity ${this.delay}ms`);\r\n    }\r\n\r\n    setPosition() {\r\n        // 호스트 요소의 사이즈와 위치 정보\r\n        const hostPos=this.el.nativeElement.getBoundingClientRect();\r\n\r\n        // tooltip 요소의 사이즈와 위치 정보\r\n        const tooltipPos=this.tooltip.getBoundingClientRect();\r\n\r\n        // window의 scroll top\r\n        // getBoundingClientRect 메소드는 viewport에서의 상대적인 위치를 반환한다.\r\n        // 스크롤이 발생한 경우, tooltip 요소의 top에 세로 스크롤 좌표값을 반영하여야 한다.\r\n        const scrollPos=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;\r\n\r\n        let top, left;\r\n\r\n        if (this.placement==='top') {\r\n            top=hostPos.top-tooltipPos.height-this.offset;\r\n            left=hostPos.left+(hostPos.width-tooltipPos.width)/2;\r\n        }\r\n\r\n        if (this.placement==='bottom') {\r\n            top=hostPos.bottom+this.offset;\r\n            left=hostPos.left+(hostPos.width-tooltipPos.width)/2;\r\n        }\r\n\r\n        if (this.placement==='left') {\r\n            top=hostPos.top+(hostPos.height-tooltipPos.height)/2;\r\n            left=hostPos.left-tooltipPos.width-this.offset;\r\n        }\r\n\r\n        if (this.placement==='right') {\r\n            top=hostPos.top+(hostPos.height-tooltipPos.height)/2;\r\n            left=hostPos.right+this.offset;\r\n        }\r\n\r\n        // 스크롤이 발생한 경우, tooltip 요소의 top에 세로 스크롤 좌표값을 반영하여야 한다.\r\n        this.renderer.setStyle(this.tooltip, 'top', `${top+scrollPos}px`);\r\n        this.renderer.setStyle(this.tooltip, 'left', `${left}px`);\r\n    }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TooltipDirective } from './tooltip.directive';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [TooltipDirective],\r\n  exports: [TooltipDirective]\r\n})\r\nexport class TooltipModule {}","import { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\r\n\r\nexport class ColorHelper {\r\n\r\n    options: any;\r\n    series: any;\r\n\r\n    constructor(options, series) {\r\n        this.options=options;\r\n        this.series=series;\r\n    }\r\n\r\n    generateColorScale() {\r\n        //let colorArr=[\"#a8385d\", \"#7aa3e5\", \"#a27ea8\", \"#aae3f5\", \"#adcded\", \"#a95963\", \"#8796c0\", \"#7ed3ed\", \"#50abcc\", \"#ad6886\"]; //ngx-charts default color code\r\n        //let colorList=['#7cb5ec', '#434348', '#f7a35c', '#90ed7d', '#8085E9', '#F15C80', '#E4D354', '#2B908F', '#F45B5B', '#91E8E1']; //highchart color code\r\n        let colorList = ['#7cb5ec', '#434348', '#f7a35c', '#90ed7d', '#8085E9', '#F15C80', '#E4D354', '#2B908F', '#F45B5B', '#91E8E1', \"#7aa3e5\", \"#a27ea8\", \"#aae3f5\", \"#adcded\", \"#a95963\", \"#8796c0\", \"#7ed3ed\", \"#50abcc\", \"#ad6886\"]\r\n        let barColors=[];\r\n        let groupDataArr=[];\r\n        for (let i=0; i<this.series.length; i++) {\r\n            groupDataArr.push(this.series[i].name);\r\n            if (this.series[i].colorCode) {\r\n                barColors.push(this.series[i].colorCode);\r\n            }\r\n            else {\r\n                let index=i%colorList.length;\r\n                barColors.push( colorList[index]);\r\n            }\r\n        }\r\n        return scaleOrdinal()\r\n            .range(barColors)\r\n            .domain(groupDataArr);\r\n    }\r\n\r\n\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    ViewEncapsulation,\r\n    OnChanges,\r\n    OnInit,\r\n    SimpleChanges,\r\n    ElementRef,\r\n    ChangeDetectorRef,\r\n    ChangeDetectionStrategy,\r\n    HostListener\r\n} from \"@angular/core\";\r\nimport { select } from 'd3-selection';\r\nimport { transition } from 'd3-transition';\r\nimport { scaleBand, scaleLinear } from \"d3-scale\";\r\nimport { ColorHelper } from '../utils/color.helper';\r\nimport { trimLabel } from '../utils/trim-label.helper';\r\nimport { ClassGetter } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n    selector: \"ngx-charts-bar\",\r\n    templateUrl: \"./ngx-charts-bar.component.html\",\r\n    styleUrls: [\"./ngx-charts-bar.component.css\"],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ngxChartsBarComponent implements OnChanges, OnInit {\r\n\r\n    private customOptions={\r\n        barType: 'vertical',\r\n        title: '',\r\n        subtitle: '',\r\n        height: 0,\r\n        width: 0,\r\n        padding: 5,\r\n        xAxis: {\r\n            title: '',\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelAlign: 'left',\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        yAxis: {\r\n            title: '',\r\n            width: 0,\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        legend: {\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        plotBackground: {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            width: 0\r\n        },\r\n        plotOptions: {\r\n            groupBarPadding: 20,\r\n            innerBarPadding: 3\r\n        },\r\n        header: {\r\n            height: 0,\r\n            width: 0\r\n        }\r\n    };\r\n\r\n    private _options: any={};\r\n\r\n    @Input() set options(obj: any) {\r\n        let xAxis=obj.xAxis;\r\n        xAxis['labelEllipsis']=(obj.xAxis.labelEllipsisSize!=undefined&&obj.xAxis.labelEllipsisSize>0)? true:false;\r\n\r\n        let yAxis=obj.yAxis;\r\n        yAxis['labelEllipsis']=(obj.yAxis.labelEllipsisSize!=undefined&&obj.yAxis.labelEllipsisSize>0)? true:false;\r\n\r\n        let legend=obj.legend;\r\n        legend['labelEllipsis']=(obj.legend.labelEllipsisSize!=undefined&&obj.legend.labelEllipsisSize>0)? true:false;\r\n        \r\n        let plotBackground=obj.plotBackground;\r\n        let plotOptions=obj.plotOptions;\r\n        let header=obj.header;\r\n\r\n        delete obj['xAxis'];\r\n        delete obj['yAxis'];\r\n        delete obj['legend'];\r\n        delete obj['plotBackground'];\r\n        delete obj['plotOptions'];\r\n        delete obj['header'];\r\n\r\n        this._options={\r\n            ...this.customOptions,\r\n            ...obj,\r\n            xAxis: {\r\n                ...this.customOptions.xAxis,\r\n                ...xAxis\r\n            },\r\n            yAxis: {\r\n                ...this.customOptions.yAxis,\r\n                ...yAxis\r\n            },\r\n            legend:{ \r\n                ...this.customOptions.legend,\r\n                ...legend\r\n            },\r\n            plotBackground: {\r\n                ...this.customOptions.plotBackground,\r\n                ...plotBackground\r\n            },\r\n            plotOptions: {\r\n                ...this.customOptions.plotOptions,\r\n                ...plotOptions\r\n            },\r\n            header: {\r\n                ...this.customOptions.header,\r\n                ...header\r\n            }\r\n        };\r\n        // console.log(this._options)\r\n    }\r\n    get options(): any {\r\n        return this._options;\r\n    }\r\n    @Input() categories: any=[];\r\n    @Input() series: any=[];\r\n\r\n    element: any;\r\n    //@Input() groupBarPadding=20;\r\n    //@Input() innerBarPadding=3;\r\n\r\n    // scale: any;\r\n    xScale: any;\r\n    innerScale: any;\r\n    yScale: any;\r\n    bars: any=[];\r\n    groupName: any[]=[];\r\n    groupBarPaddingBK: any;\r\n    innerBarPaddingBK: any;\r\n    colorScale: any;\r\n    trimLabel: any;\r\n    constructor(element: ElementRef,\r\n        private chartElement: ElementRef,\r\n        private cdr: ChangeDetectorRef) {\r\n        this.element=element.nativeElement;\r\n        this.trimLabel = trimLabel;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.groupBarPaddingBK=this.options.plotOptions.groupBarPadding;\r\n        this.innerBarPaddingBK=this.options.plotOptions.innerBarPadding;\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.options.width=this.options.width;\r\n        this.options.height=this.options.height;\r\n\r\n        this.update();\r\n    }\r\n\r\n    update(): void {\r\n        // console.log(\"ttttttt\",this.options)\r\n        const hostElem=this.chartElement.nativeElement;\r\n        let dims=hostElem.parentNode!==null? hostElem.parentNode.getBoundingClientRect():{ height: 400, width: 800 };\r\n\r\n        var style=hostElem.parentNode.currentStyle||window.getComputedStyle(hostElem.parentNode);\r\n\r\n        this.options.height=!this.options.height? dims.height-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight):this.options.height;\r\n        this.options.width=!this.options.width? dims.width-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight):dims.width-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight);\r\n\r\n        this.calPlotBackground()\r\n\r\n        let countFlag=false;\r\n        this.options.plotOptions.groupBarPadding=this.groupBarPaddingBK;\r\n        this.options.plotOptions.innerBarPadding=this.innerBarPaddingBK;\r\n        do {\r\n            if (countFlag==true) {\r\n                this.options.plotOptions.groupBarPadding--;\r\n                this.options.plotOptions.innerBarPadding=2;\r\n            }\r\n            if (this.options.barType=='vertical') {\r\n                this.xScale=this.getXScale();\r\n            }\r\n            else {\r\n                this.yScale=this.getXScale();\r\n            }\r\n            this.innerScale=this.getInnerScale();\r\n            countFlag=true;\r\n\r\n        } while (this.innerScale.bandwidth()<2);\r\n        // \r\n\r\n        if (this.options.barType=='vertical') {\r\n            this.yScale=this.getYScale();\r\n        }\r\n        else {\r\n            this.xScale=this.getYScale();\r\n        }\r\n\r\n        let colorHelper=new ColorHelper(this.options, this.series);\r\n        this.colorScale=colorHelper.generateColorScale();\r\n\r\n        setTimeout(() => {\r\n            this.groupName=[];\r\n            this.series.map(item => {\r\n                if (item.name)\r\n                    this.groupName.push({\r\n                        name: item.name,\r\n                        color: this.colorScale(item.name)\r\n                    });\r\n            })\r\n            this.createBar();\r\n\r\n            //setTimeout(() => {\r\n                // for (let i=0; i<this.bars.length; i++) {\r\n                //     console.log(this.bars[i].className)\r\n                //     transition(select(this.element)).select('.bar02').transition()\r\n                //         .duration(500)\r\n                //         .attr('width', this.bars[i].width);\r\n                // }\r\n            //},1000)\r\n            \r\n        });\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    getXScale(): any {\r\n\r\n        let spacing;\r\n        let range;\r\n        if (this.options.barType=='vertical') {\r\n            spacing=(this.categories.length/(this.options.plotBackground.width/this.options.plotOptions.groupBarPadding));\r\n            range=[0, this.options.plotBackground.width];\r\n        }\r\n        else {\r\n            let length=this.options.height-this.options.header.height;\r\n            spacing=(this.categories.length/(this.options.plotBackground.height/this.options.plotOptions.groupBarPadding));\r\n            range=[0, this.options.plotBackground.height];\r\n        }\r\n        return scaleBand()\r\n            .range(range)\r\n            .paddingInner(spacing)\r\n            .paddingOuter(0.1)\r\n            .domain(this.categories);\r\n    }\r\n    getInnerScale(): any {\r\n\r\n        let groupDataArr=[];\r\n        for (let i=0; i<this.series.length; i++) {\r\n            groupDataArr.push(this.series[i].name);\r\n        }\r\n\r\n        let spacing;\r\n        let range;\r\n        if (this.options.barType=='vertical') {\r\n            spacing=(this.series.length/(this.xScale.bandwidth()/this.options.plotOptions.innerBarPadding));\r\n            range=this.xScale.bandwidth();\r\n        }\r\n        else {\r\n            spacing=(this.series.length/(this.yScale.bandwidth()/this.options.plotOptions.innerBarPadding));\r\n            range=this.yScale.bandwidth();\r\n        }\r\n\r\n        return scaleBand()\r\n            .range([0, range])\r\n            .paddingInner(spacing)\r\n            .domain(groupDataArr);\r\n    }\r\n\r\n    getYScale(): any {\r\n        let uniqueValue: any=new Set();\r\n        this.series.map((item) => {\r\n            item.data.map((value) => {\r\n                uniqueValue.add(value);\r\n            });\r\n        });\r\n\r\n        let min=Math.min(...uniqueValue);\r\n        min=min>0? 0:min;\r\n\r\n        let max=Math.max(0, ...uniqueValue);\r\n        max=max>0? max:0;\r\n\r\n        let range=[];\r\n        if (this.options.barType=='vertical') {\r\n            let value=this.options.plotBackground.height;\r\n            // console.log(\"bar getYScale\",value)\r\n            range=[value, 0];\r\n            // console.log(\"bar getYScale - \", range)\r\n        }\r\n        else {\r\n            let value=this.options.plotBackground.width-30;\r\n            range=[0, value];\r\n        }\r\n\r\n        // console.log(\"bar getYScale --- \", range, min, max)\r\n\r\n        return scaleLinear()\r\n            .range(range)\r\n            .domain([min, max]);\r\n        //return this.scale.nice().ticks();\r\n    }\r\n\r\n    calPlotBackground() {\r\n        this.options={\r\n            ...this.options,\r\n            plotBackground: {\r\n                ...this.options.plotBackground,\r\n                x: 0,\r\n                y: 0,\r\n                height: this.options.height-this.options.xAxis.height-this.options.header.height-this.options.padding,\r\n                width: this.options.width-this.options.yAxis.width-this.options.padding\r\n            }\r\n        }\r\n        // console.log(\"calPlotBackground\", JSON.stringify(this.options));\r\n    }\r\n\r\n    createBar() {\r\n        //console.log(\"this.innerScale.bandwidth() \"+this.innerScale.bandwidth())\r\n        this.bars=[];\r\n        if (this.options.barType=='vertical') {\r\n            this.categories.map((item, index) => {\r\n                for (let i=0; i<this.series.length; i++) {\r\n                    const bar: any={\r\n                        value: item,  //jan,feb\r\n                        data: this.series[i].data[index], //101,202\r\n                        group: this.series[i].name,\r\n                        color: this.colorScale(this.series[i].name),\r\n                        //formattedLabel,\r\n                        width: this.innerScale.bandwidth(),\r\n                        height: this.series[i].data[index]>0? (this.yScale(0)-this.yScale(this.series[i].data[index])):(this.yScale(this.series[i].data[index])-this.yScale(0)),\r\n                        x: this.innerScale(this.series[i].name)+this.xScale(item),\r\n                        y: this.series[i].data[index]>0? this.yScale(this.series[i].data[index]):this.yScale(0),\r\n                        className: \"vertical_bar\"\r\n                    };\r\n                    this.bars.push(bar);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.categories.map((item, index) => {\r\n                for (let i=0; i<this.series.length; i++) {\r\n                    const bar: any={\r\n                        value: item,  //jan,feb\r\n                        data: this.series[i].data[index], //101,202\r\n                        group: this.series[i].name,\r\n                        color: this.colorScale(this.series[i].name),\r\n                        //formattedLabel,\r\n                        width: this.series[i].data[index]>0? (this.xScale(this.series[i].data[index])-this.xScale(0)):(this.xScale(0)-this.xScale(this.series[i].data[index])),\r\n                        height: this.innerScale.bandwidth(),\r\n                        x: this.series[i].data[index]>0? this.xScale(0):this.xScale(this.series[i].data[index]),\r\n                        y: this.innerScale(this.series[i].name)+this.yScale(item),\r\n                        className: \"horizontal_bar\"\r\n                    };\r\n                    this.bars.push(bar);\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    yAxisWidthChange({ yAxisWidth, yAxisHeight,  yAxisRightWidth }) {\r\n        //console.log(\"yAxisWidth \"+yAxisWidth)\r\n        this.options={\r\n            ...this.options,\r\n            yAxis: {\r\n                ...this.options.yAxis,\r\n                width: yAxisWidth,\r\n                height: yAxisHeight\r\n            }\r\n        }\r\n        //console.log( this.options)\r\n        this.update()\r\n    }\r\n\r\n    xAxisHeightChange({ xAxisHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            xAxis: {\r\n                ...this.options.xAxis,\r\n                height: xAxisHeight\r\n            }\r\n        }\r\n        //console.log(\"xAxisHeightChange\", xAxisHeight, JSON.stringify(this.options.xAxis));\r\n        this.update()\r\n    }\r\n    headerHeightChange({ headerHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            header: {\r\n                ...this.options.header,\r\n                height: headerHeight\r\n            }\r\n        }\r\n        this.update()\r\n    }\r\n\r\n\r\n    toolTipPlaccement(data) {\r\n        if (this.options.barType=='vertical') {\r\n            return data>0? 'top':'bottom'\r\n        }\r\n        else {\r\n            return data>0? 'right':'left'\r\n        }\r\n    }\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event) {\r\n        //console.log(\"window:resize\")\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n    getViewBox() {\r\n        if (this.options.width>0&&this.options.height>0)\r\n            return '0 0 '+this.options.width+' '+this.options.height;\r\n        else\r\n            return '0 0 0 0';\r\n    }\r\n    \r\n\r\n\r\n\r\n    private strToNumber(str) {\r\n        let numberPattern=/\\d+/g;\r\n        let num=str.match(numberPattern).join('')\r\n        return parseFloat(num);\r\n    }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AxesModule } from '../axes/axes.module';\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { LegendModule } from '../legend/legend.module';\r\nimport { TooltipModule } from '../tooltip/tooltip.module';\r\n\r\nimport { ngxChartsBarComponent } from \"./ngx-charts-bar.component\";\r\n\r\n\r\n@NgModule({\r\n    declarations: [ngxChartsBarComponent],\r\n    imports: [CommonModule, AxesModule, HeaderModule,LegendModule, TooltipModule],\r\n    exports: [ngxChartsBarComponent],\r\n    providers: [],\r\n})\r\nexport class ngxChartsBarModule { }\r\n","import {\r\n    Component,\r\n    Input,\r\n    ViewEncapsulation,\r\n    OnChanges,\r\n    OnInit,\r\n    SimpleChanges,\r\n    ElementRef,\r\n    ChangeDetectorRef,\r\n    ChangeDetectionStrategy,\r\n    HostListener\r\n} from \"@angular/core\";\r\n\r\nimport { scaleBand, scaleLinear } from \"d3-scale\";\r\nimport { ColorHelper } from '../utils/color.helper';\r\nimport { ClassGetter } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n    selector: \"ngx-charts-line\",\r\n    templateUrl: \"./ngx-charts-line.component.html\",\r\n    styleUrls: [\"./ngx-charts-line.component.css\"],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n    \r\nexport class ngxChartsLineComponent implements OnChanges, OnInit {\r\n\r\n    private customOptions={\r\n        barType: 'vertical',\r\n        title: '',\r\n        subtitle: '',\r\n        height: 0,\r\n        width: 0,\r\n        padding: 5,\r\n        xAxis: {\r\n            title: '',\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelAlign: 'left',\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        yAxis: {\r\n            title: '',\r\n            width: 0,\r\n            height:0,\r\n            labelRotation: 0,\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        legend: {\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        plotBackground: {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            width: 0\r\n        },\r\n        plotOptions: { \r\n            groupBarPadding :20,\r\n            innerBarPadding :3\r\n        },\r\n        header: {\r\n            height: 0,\r\n            width: 0\r\n        }\r\n    };\r\n\r\n    private _options: any={};\r\n\r\n    @Input() set options(obj: any) {\r\n        let xAxis=obj.xAxis;\r\n        xAxis['labelEllipsis']=(obj.xAxis.labelEllipsisSize!=undefined&&obj.xAxis.labelEllipsisSize>0)? true:false;\r\n\r\n        let yAxis=obj.yAxis;\r\n        yAxis['labelEllipsis']=(obj.yAxis.labelEllipsisSize!=undefined&&obj.yAxis.labelEllipsisSize>0)? true:false;\r\n\r\n        let legend=obj.legend;\r\n        legend['labelEllipsis']=(obj.legend.labelEllipsisSize!=undefined&&obj.legend.labelEllipsisSize>0)? true:false;\r\n        \r\n        let plotBackground=obj.plotBackground;\r\n        let plotOptions=obj.plotOptions;\r\n        let header=obj.header;\r\n\r\n        delete obj['xAxis'];\r\n        delete obj['yAxis'];\r\n        delete obj['legend'];\r\n        delete obj['plotBackground'];\r\n        delete obj['plotOptions'];\r\n        delete obj['header'];\r\n\r\n        this._options={\r\n            ...this.customOptions,\r\n            ...obj,\r\n            xAxis: {\r\n                ...this.customOptions.xAxis,\r\n                ...xAxis\r\n            },\r\n            yAxis: {\r\n                ...this.customOptions.yAxis,\r\n                ...yAxis\r\n            },\r\n            legend:{ \r\n                ...this.customOptions.legend,\r\n                ...legend\r\n            },\r\n            plotBackground: {\r\n                ...this.customOptions.plotBackground,\r\n                ...plotBackground\r\n            },\r\n            plotOptions: {\r\n                ...this.customOptions.plotOptions,\r\n                ...plotOptions\r\n            },\r\n            header: {\r\n                ...this.customOptions.header,\r\n                ...header\r\n            }\r\n        };\r\n        this._options['barType']='vertical';\r\n    }\r\n    get options(): any {\r\n        return this._options;\r\n    }\r\n    @Input() categories: any=[];\r\n    @Input() series: any=[];\r\n\r\n    //@Input() groupBarPadding=20;\r\n    //@Input() innerBarPadding=3;\r\n\r\n    // scale: any;\r\n    xScale: any;\r\n    innerScale: any;\r\n    yScale: any;\r\n    lines: any=[];\r\n    lineCircle: any = [];\r\n    groupName: any[] = [];\r\n    groupBarPaddingBK: any;\r\n    innerBarPaddingBK: any;\r\n    colorScale: any;\r\n\r\n    constructor(\r\n        private chartElement: ElementRef,\r\n        private  cdr: ChangeDetectorRef) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.groupBarPaddingBK=this.options.plotOptions.groupBarPadding;\r\n        this.innerBarPaddingBK=this.options.plotOptions.innerBarPadding;\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.options.width=this.options.width;\r\n        this.options.height=this.options.height;\r\n        \r\n        this.update();\r\n    }\r\n\r\n    update(): void {\r\n        // console.log(\"ttttttt\",this.options)\r\n        const hostElem=this.chartElement.nativeElement;\r\n        let dims=hostElem.parentNode!==null? hostElem.parentNode.getBoundingClientRect():{height:400, width:800};\r\n        \r\n        var style=hostElem.parentNode.currentStyle||window.getComputedStyle(hostElem.parentNode);\r\n       \r\n        this.options.height = !this.options.height? dims.height - this.strToNumber(style.paddingLeft) - this.strToNumber(style.paddingRight)  :this.options.height;\r\n        this.options.width = !this.options.width ? dims.width- this.strToNumber(style.paddingLeft) - this.strToNumber(style.paddingRight)   : dims.width- this.strToNumber(style.paddingLeft) - this.strToNumber(style.paddingRight);\r\n        \r\n        this.calPlotBackground()\r\n\r\n        let countFlag=false;\r\n        this.options.plotOptions.groupBarPadding=this.groupBarPaddingBK;\r\n        this.options.plotOptions.innerBarPadding=this.innerBarPaddingBK;\r\n        do {\r\n            if (countFlag==true) {\r\n                this.options.plotOptions.groupBarPadding--;\r\n                this.options.plotOptions.innerBarPadding = 2;\r\n            }\r\n            if (this.options.barType=='vertical') {\r\n                this.xScale=this.getXScale();\r\n            }\r\n            else { \r\n                this.yScale=this.getXScale();\r\n            }\r\n            this.innerScale=this.getInnerScale();\r\n            countFlag=true;\r\n             \r\n        } while (this.innerScale.bandwidth()<2);\r\n        // \r\n\r\n        if (this.options.barType=='vertical') {\r\n            this.yScale=this.getYScale();\r\n        }\r\n        else { \r\n            this.xScale=this.getYScale();\r\n        }\r\n        \r\n        let colorHelper=new ColorHelper(this.options, this.series);\r\n        this.colorScale=colorHelper.generateColorScale();\r\n        \r\n        \r\n\r\n        setTimeout(() => {\r\n            this.groupName=[];\r\n            this.series.map(item => { \r\n                if (item.name)\r\n                    this.groupName.push({\r\n                        name: item.name,\r\n                        color: this.colorScale(item.name)\r\n                    });\r\n            })\r\n            this.createLine();\r\n        });\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    getXScale(): any {\r\n        \r\n        let spacing;\r\n        let range;\r\n        if (this.options.barType=='vertical') {\r\n            spacing=(this.categories.length/(this.options.plotBackground.width/this.options.plotOptions.groupBarPadding));\r\n            range= [0, this.options.plotBackground.width];\r\n        }\r\n        else { \r\n            let length=this.options.height-this.options.header.height;\r\n            spacing=(this.categories.length/(this.options.plotBackground.height/this.options.plotOptions.groupBarPadding));\r\n            range=[0, this.options.plotBackground.height];\r\n        }\r\n        return scaleBand()\r\n            .range(range)\r\n            .paddingInner(spacing)\r\n            .paddingOuter(0.1)\r\n            .domain(this.categories);\r\n    }\r\n    getInnerScale(): any {\r\n\r\n        let groupDataArr=[];\r\n        for (let i=0; i<this.series.length; i++) { \r\n            groupDataArr.push(this.series[i].name);\r\n        }\r\n\r\n        let spacing;\r\n        let range;\r\n        if (this.options.barType=='vertical') {\r\n            spacing=(this.series.length/(this.xScale.bandwidth()/this.options.plotOptions.innerBarPadding));\r\n            range=this.xScale.bandwidth();\r\n        }\r\n        else { \r\n            spacing=(this.series.length/(this.yScale.bandwidth()/this.options.plotOptions.innerBarPadding));\r\n            range=this.yScale.bandwidth();\r\n        }\r\n\r\n        return scaleBand()\r\n            .range([0, range])\r\n            .paddingInner(spacing)\r\n            .domain(groupDataArr);\r\n    }\r\n    \r\n    getYScale(): any {\r\n        let uniqueValue: any=new Set();\r\n        this.series.map((item) => {\r\n            item.data.map((value) => {\r\n                uniqueValue.add(value);\r\n            });\r\n        });\r\n\r\n        let min=Math.min(...uniqueValue);\r\n        min=min>0? 0:min;\r\n        \r\n        let max=Math.max(0, ...uniqueValue);\r\n        max=max>0? max:0;\r\n        \r\n        let range = [];\r\n        if (this.options.barType=='vertical') {\r\n            let value=this.options.plotBackground.height;\r\n            // console.log(\"bar getYScale\",value)\r\n            range=[value, 0];\r\n            // console.log(\"bar getYScale - \", range)\r\n        }\r\n        else { \r\n            let value=this.options.plotBackground.width-30;\r\n            range=[0, value];\r\n        }\r\n\r\n        // console.log(\"bar getYScale --- \", range, min, max)\r\n\r\n        return scaleLinear()\r\n            .range(range)\r\n            .domain([min, max]);\r\n        //return this.scale.nice().ticks();\r\n    }\r\n\r\n\r\n    calPlotBackground() {\r\n        this.options={\r\n            ...this.options,\r\n            plotBackground: {\r\n                ...this.options.plotBackground,\r\n                x: 0,\r\n                y: 0,\r\n                height:this.options.height-this.options.xAxis.height-this.options.header.height-this.options.padding,\r\n                width: this.options.width-this.options.yAxis.width-this.options.padding\r\n            }\r\n        }\r\n        // console.log(\"calPlotBackground\", JSON.stringify(this.options));\r\n    }\r\n    createLine() {\r\n        //console.log(\"this.innerScale.bandwidth() \"+this.innerScale.bandwidth())\r\n        this.lines=[];\r\n        this.lineCircle=[];\r\n        for (let i=0; i<this.series.length; i++) { \r\n            let line={points:\"\", color:\"\"}\r\n            for (let j=0; j<this.categories.length; j++) { \r\n                let x=this.xScale(this.categories[j])+(this.xScale.bandwidth()/2)+this.options.yAxis.width;\r\n                let y = this.yScale(this.series[i].data[j])+this.options.header.height\r\n                line.points+=(x +\",\"+y+\" \");\r\n                line.color=this.colorScale(this.series[i].name);\r\n                this.lineCircle.push({\r\n                    x,\r\n                    y,\r\n                    color: this.colorScale(this.series[i].name),\r\n                    value: this.categories[j],  //jan,feb\r\n                    data: this.series[i].data[j], //101,202\r\n                    group: this.series[i].name\r\n                });\r\n            }\r\n            this.lines.push(line);\r\n        }\r\n\r\n        // console.log(this.lineCircle);\r\n       \r\n       \r\n        \r\n    }\r\n\r\n    yAxisWidthChange({ yAxisWidth,yAxisHeight }) {\r\n        //console.log(\"yAxisWidth \"+yAxisWidth)\r\n        this.options={\r\n            ...this.options,\r\n            yAxis: {\r\n                ...this.options.yAxis,\r\n                width: yAxisWidth,\r\n                height: yAxisHeight\r\n            }\r\n        }\r\n        //console.log( this.options)\r\n        this.update()\r\n    }\r\n\r\n    xAxisHeightChange({ xAxisHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            xAxis: {\r\n                ...this.options.xAxis,\r\n                height: xAxisHeight\r\n            }\r\n        }\r\n        //console.log(\"xAxisHeightChange\", xAxisHeight, JSON.stringify(this.options.xAxis));\r\n        this.update()\r\n    }\r\n    headerHeightChange({ headerHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            header: {\r\n                ...this.options.header,\r\n                height: headerHeight\r\n            }\r\n        }\r\n        this.update()\r\n    }\r\n\r\n\r\n    toolTipPlaccement(data) { \r\n        if (this.options.barType=='vertical') {\r\n            return data>0? 'top':'bottom'\r\n        }\r\n        else { \r\n            return data>0? 'right':'left'\r\n        }\r\n    }\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event) {\r\n        //console.log(\"window:resize\")\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n   \r\n    \r\n    \r\n\r\n\r\n    private strToNumber(str) { \r\n        let numberPattern=/\\d+/g;\r\n        let num=str.match(numberPattern).join('')\r\n        return parseFloat(num);\r\n    }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AxesModule } from '../axes/axes.module';\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { LegendModule } from '../legend/legend.module';\r\nimport { ngxChartsLineComponent } from \"./ngx-charts-line.component\";\r\nimport { TooltipModule } from '../tooltip/tooltip.module';\r\n\r\n@NgModule({\r\n    declarations: [ngxChartsLineComponent],\r\n    imports: [CommonModule, AxesModule, HeaderModule,LegendModule, TooltipModule],\r\n    exports: [ngxChartsLineComponent],\r\n    providers: [],\r\n})\r\nexport class ngxChartsLineModule { }\r\n","import {\r\n    Component,\r\n    Input,\r\n    ViewEncapsulation,\r\n    OnChanges,\r\n    OnInit,\r\n    SimpleChanges,\r\n    ElementRef,\r\n    ChangeDetectorRef,\r\n    ChangeDetectionStrategy,\r\n    HostListener\r\n} from \"@angular/core\";\r\n\r\nimport { scaleBand, scaleLinear } from \"d3-scale\";\r\nimport { ColorHelper } from '../utils/color.helper';\r\nimport { trimLabel } from '../utils/trim-label.helper';\r\nimport { arc, pie } from 'd3-shape';\r\n\r\n@Component({\r\n    selector: \"ngx-charts-pie\",\r\n    templateUrl: \"./ngx-charts-pie.component.html\",\r\n    styleUrls: [\"./ngx-charts-pie.component.css\"],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class ngxChartsPieComponent implements OnChanges, OnInit {\r\n\r\n    private customOptions={\r\n        barType: 'vertical',\r\n        title: '',\r\n        subtitle: '',\r\n        height: 0,\r\n        width: 0,\r\n        padding: 5,\r\n        xAxis: {\r\n            title: '',\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelAlign: 'left',\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        yAxis: {\r\n            title: '',\r\n            width: 0,\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        plotBackground: {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            width: 0\r\n        },\r\n        legend: {\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        plotOptions: {\r\n            outerRadius: 80,\r\n            innerRadius: 0,\r\n            labelEllipsis: false,\r\n            labelEllipsisSize:16\r\n        },\r\n        header: {\r\n            height: 0,\r\n            width: 0\r\n        }\r\n    };\r\n\r\n    private _options: any={};\r\n\r\n    @Input() set options(obj: any) {\r\n        let xAxis=obj.xAxis;\r\n        let yAxis=obj.yAxis;\r\n\r\n        let legend=obj.legend;\r\n        legend['labelEllipsis']=(obj.legend.labelEllipsisSize!=undefined&&obj.legend.labelEllipsisSize>0)? true:false;\r\n        \r\n        let plotBackground=obj.plotBackground;\r\n        let plotOptions=obj.plotOptions;\r\n        plotOptions['labelEllipsis']=(obj.plotOptions.labelEllipsisSize!=undefined&&obj.plotOptions.labelEllipsisSize>0)? true:false;\r\n        let header=obj.header;\r\n\r\n        delete obj['xAxis'];\r\n        delete obj['yAxis'];\r\n        delete obj['legend'];\r\n        delete obj['plotBackground'];\r\n        delete obj['plotOptions'];\r\n        delete obj['header'];\r\n\r\n        this._options={\r\n            ...this.customOptions,\r\n            ...obj,\r\n            xAxis: {\r\n                ...this.customOptions.xAxis,\r\n                ...xAxis\r\n            },\r\n            yAxis: {\r\n                ...this.customOptions.yAxis,\r\n                ...yAxis\r\n            },\r\n            legend:{ \r\n                ...this.customOptions.legend,\r\n                ...legend\r\n            },\r\n            plotBackground: {\r\n                ...this.customOptions.plotBackground,\r\n                ...plotBackground\r\n            },\r\n            plotOptions: {\r\n                ...this.customOptions.plotOptions,\r\n                ...plotOptions\r\n\r\n            },\r\n            header: {\r\n                ...this.customOptions.header,\r\n                ...header\r\n            }\r\n        };\r\n    }\r\n    get options(): any {\r\n        return this._options;\r\n    }\r\n    @Input() categories: any=[];\r\n    @Input() series: any=[];\r\n\r\n    //@Input() groupBarPadding=20;\r\n    //@Input() innerBarPadding=3;\r\n\r\n    // scale: any;\r\n    xScale: any;\r\n    innerScale: any;\r\n    yScale: any;\r\n    pies: any=[];\r\n    lineCircle: any=[];\r\n    groupName: any[]=[];\r\n    // groupBarPaddingBK: any;\r\n    // innerBarPaddingBK: any;\r\n    colorScale: any;\r\n    calcArc: any;\r\n    pieGenerator: any;\r\n    translation: string=\"\";\r\n    trimLabel: any;\r\n    constructor(\r\n        private chartElement: ElementRef,\r\n        private cdr: ChangeDetectorRef) { \r\n            this.trimLabel = trimLabel;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // this.groupBarPaddingBK=this.options.plotOptions.groupBarPadding;\r\n        // this.innerBarPaddingBK=this.options.plotOptions.innerBarPadding;\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.options.width=this.options.width;\r\n        this.options.height=this.options.height;\r\n        this.update();\r\n    }\r\n\r\n    update(): void {\r\n        // console.log(\"ttttttt\",this.options)\r\n        const hostElem=this.chartElement.nativeElement;\r\n        let dims=hostElem.parentNode!==null? hostElem.parentNode.getBoundingClientRect():{ height: 400, width: 800 };\r\n\r\n        var style=hostElem.parentNode.currentStyle||window.getComputedStyle(hostElem.parentNode);\r\n\r\n        this.options.height=!this.options.height? dims.height-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight):this.options.height;\r\n        this.options.width=!this.options.width? dims.width-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight):dims.width-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight);\r\n\r\n        this.calPlotBackground();\r\n        const xOffset=this.options.width/2;\r\n        const yOffset=this.options.header.height+(this.options.plotBackground.height/2);\r\n        this.translation=`translate(${xOffset}, ${yOffset})`;\r\n        this.calcArc=this.calculateArc();\r\n        this.pieGenerator=this.pieGeneratorFunc();\r\n\r\n        // console.log(this.pieGenerator)\r\n\r\n        // let countFlag=false;\r\n        // this.options.plotOptions.groupBarPadding=this.groupBarPaddingBK;\r\n        // this.options.plotOptions.innerBarPadding=this.innerBarPaddingBK;\r\n        // do {\r\n        //     if (countFlag==true) {\r\n        //         this.options.plotOptions.groupBarPadding--;\r\n        //         this.options.plotOptions.innerBarPadding = 2;\r\n        //     }\r\n        //     if (this.options.barType=='vertical') {\r\n        //         this.xScale=this.getXScale();\r\n        //     }\r\n        //     else { \r\n        //         this.yScale=this.getXScale();\r\n        //     }\r\n        //     this.innerScale=this.getInnerScale();\r\n        //     countFlag=true;\r\n        // } while (this.innerScale.bandwidth()<2);\r\n        // \r\n\r\n        // if (this.options.barType=='vertical') {\r\n        //     this.yScale=this.getYScale();\r\n        // }\r\n        // else { \r\n        //     this.xScale=this.getYScale();\r\n        // }\r\n\r\n        let colorHelper=new ColorHelper(this.options, this.series);\r\n        this.colorScale=colorHelper.generateColorScale();\r\n\r\n        setTimeout(() => {\r\n            this.groupName=[];\r\n            this.series.map(item => {\r\n                if (item.name) {\r\n                    this.groupName.push({\r\n                        name: item.name,\r\n                        color: this.colorScale(item.name)\r\n                    });\r\n                }\r\n            })\r\n            this.createPie();\r\n        });\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    pieGeneratorFunc() {\r\n        return pie()\r\n            .value(d => d.data)\r\n            .sort(null)(this.series);\r\n    }\r\n\r\n    calculateArc(): any {\r\n        let outerRadius=this.options.plotOptions.outerRadius;\r\n        let innerRadius=this.options.plotOptions.innerRadius;\r\n        let cornerRadius=0;\r\n        return arc()\r\n            .innerRadius(innerRadius)\r\n            .outerRadius(outerRadius)\r\n            .cornerRadius(cornerRadius);\r\n    }\r\n\r\n    outerArc(): any {\r\n        const factor=1.2;\r\n        let outerRadius=this.options.plotOptions.outerRadius;\r\n        return arc()\r\n            .innerRadius(outerRadius*factor)\r\n            .outerRadius(outerRadius*factor);\r\n    }\r\n\r\n    calPlotBackground() {\r\n        this.options={\r\n            ...this.options,\r\n            plotBackground: {\r\n                ...this.options.plotBackground,\r\n                x: 0,\r\n                y: 0,\r\n                height: this.options.height-this.options.xAxis.height-this.options.header.height-this.options.padding,\r\n                width: this.options.width-this.options.yAxis.width-this.options.padding\r\n            }\r\n        }\r\n        // console.log(\"calPlotBackground\", JSON.stringify(this.options));\r\n    }\r\n    createPie() {\r\n        //console.log(\"this.innerScale.bandwidth() \"+this.innerScale.bandwidth())\r\n        this.pies=[];\r\n        for (let i=0; i<this.pieGenerator.length; i++) {\r\n            let factor=1.2;\r\n            let tempObj={\r\n                path: this.calcArc.startAngle(this.pieGenerator[i].startAngle).endAngle(this.pieGenerator[i].endAngle)(),\r\n                color: this.colorScale(this.pieGenerator[i].data.name),\r\n                data: this.pieGenerator[i].data,\r\n                pos: this.outerArc().centroid(this.pieGenerator[i]),\r\n                labelPath: \"\",\r\n                textAnchor: this.midAngle(this.pieGenerator[i])<Math.PI? 'start':'end'\r\n            };\r\n            tempObj[\"pos\"][0]=factor*this.options.plotOptions.outerRadius*(this.midAngle(this.pieGenerator[i])<Math.PI? 1:-1);\r\n\r\n            //create a line path\r\n            const innerPos=this.calcArc.centroid(this.pieGenerator[i]);\r\n            let scale=tempObj[\"pos\"][1]/innerPos[1];\r\n            if (tempObj[\"pos\"][1]===0||innerPos[1]===0) {\r\n                scale=1;\r\n            }\r\n            const outerPos=[scale*innerPos[0], scale*innerPos[1]];\r\n            tempObj.labelPath=`M${innerPos}L${outerPos}L${tempObj[\"pos\"]}`;\r\n\r\n            this.pies.push(tempObj);\r\n        }\r\n        // console.log(\"all pies : \", this.pies);\r\n    }\r\n    midAngle(d): number {\r\n        return d.startAngle+(d.endAngle-d.startAngle)/2;\r\n    }\r\n\r\n    yAxisWidthChange({ yAxisWidth, yAxisHeight }) {\r\n        //console.log(\"yAxisWidth \"+yAxisWidth)\r\n        this.options={\r\n            ...this.options,\r\n            yAxis: {\r\n                ...this.options.yAxis,\r\n                width: yAxisWidth,\r\n                height: yAxisHeight\r\n            }\r\n        }\r\n        //console.log( this.options)\r\n        this.update()\r\n    }\r\n\r\n    xAxisHeightChange({ xAxisHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            xAxis: {\r\n                ...this.options.xAxis,\r\n                height: xAxisHeight\r\n            }\r\n        }\r\n        //console.log(\"xAxisHeightChange\", xAxisHeight, JSON.stringify(this.options.xAxis));\r\n        this.update()\r\n    }\r\n    headerHeightChange({ headerHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            header: {\r\n                ...this.options.header,\r\n                height: headerHeight\r\n            }\r\n        }\r\n        this.update()\r\n    }\r\n\r\n\r\n    toolTipPlaccement(data) {\r\n        if (this.options.barType=='vertical') {\r\n            return data>0? 'top':'bottom'\r\n        }\r\n        else {\r\n            return data>0? 'right':'left'\r\n        }\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event) {\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n    private strToNumber(str) {\r\n        let numberPattern=/\\d+/g;\r\n        let num=str.match(numberPattern).join('')\r\n        return parseFloat(num);\r\n    }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AxesModule } from '../axes/axes.module';\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { LegendModule } from '../legend/legend.module';\r\nimport { ngxChartsPieComponent } from \"./ngx-charts-pie.component\";\r\nimport { TooltipModule } from '../tooltip/tooltip.module';\r\n\r\n@NgModule({\r\n    declarations: [ngxChartsPieComponent],\r\n    imports: [CommonModule, AxesModule, HeaderModule,LegendModule, TooltipModule],\r\n    exports: [ngxChartsPieComponent],\r\n    providers: [],\r\n})\r\nexport class ngxChartsPieModule { }\r\n","import {\r\n    Component,\r\n    Input,\r\n    ViewEncapsulation,\r\n    OnChanges,\r\n    OnInit,\r\n    SimpleChanges,\r\n    ElementRef,\r\n    ChangeDetectorRef,\r\n    ChangeDetectionStrategy,\r\n    HostListener\r\n} from \"@angular/core\";\r\n\r\nimport { scaleBand, scaleLinear } from \"d3-scale\";\r\nimport { ColorHelper } from '../utils/color.helper';\r\nimport { ClassGetter } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n    selector: \"ngx-charts-combo\",\r\n    templateUrl: \"./ngx-charts-combo.component.html\",\r\n    styleUrls: [\"./ngx-charts-combo.component.css\"],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ngxChartsComboComponent implements OnChanges, OnInit {\r\n    private customOptions={\r\n        barType: 'vertical',\r\n        title: '',\r\n        subtitle: '',\r\n        height: 0,\r\n        width: 0,\r\n        padding: 5,\r\n        xAxis: {\r\n            title: '',\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelAlign: 'left',\r\n            labelEllipsis: false,\r\n            labelEllipsisSize: 16\r\n        },\r\n        yAxis: {\r\n            title: '',\r\n            rightTitle:'',\r\n            width: 0,\r\n            rightWidth: 0,\r\n            height: 0,\r\n            labelRotation: 0,\r\n            labelEllipsis: false,\r\n            labelEllipsisSize: 16\r\n        },\r\n        legend: {\r\n            labelEllipsis: false,\r\n            labelEllipsisSize: 16\r\n        },\r\n        plotBackground: {\r\n            x: 0,\r\n            y: 0,\r\n            height: 0,\r\n            width: 0\r\n        },\r\n        plotOptions: {\r\n            groupBarPadding: 20,\r\n            innerBarPadding: 3\r\n        },\r\n        header: {\r\n            height: 0,\r\n            width: 0\r\n        }\r\n    };\r\n\r\n    private _options: any={};\r\n\r\n    @Input() set options(obj: any) {\r\n        let xAxis=obj.xAxis;\r\n        xAxis['labelEllipsis']=(obj.xAxis.labelEllipsisSize!=undefined&&obj.xAxis.labelEllipsisSize>0)? true:false;\r\n\r\n        let yAxis=obj.yAxis;\r\n        yAxis['labelEllipsis']=(obj.yAxis.labelEllipsisSize!=undefined&&obj.yAxis.labelEllipsisSize>0)? true:false;\r\n        yAxis['title']=yAxis.leftTitle\r\n\r\n        let legend=obj.legend;\r\n        legend['labelEllipsis']=(obj.legend.labelEllipsisSize!=undefined&&obj.legend.labelEllipsisSize>0)? true:false;\r\n        \r\n        let plotBackground=obj.plotBackground;\r\n        let plotOptions=obj.plotOptions;\r\n        let header=obj.header;\r\n\r\n        delete obj['xAxis'];\r\n        delete obj['yAxis'];\r\n        delete obj['legend'];\r\n        delete obj['plotBackground'];\r\n        delete obj['plotOptions'];\r\n        delete obj['header'];\r\n\r\n        this._options={\r\n            ...this.customOptions,\r\n            ...obj,\r\n            xAxis: {\r\n                ...this.customOptions.xAxis,\r\n                ...xAxis\r\n            },\r\n            yAxis: {\r\n                ...this.customOptions.yAxis,\r\n                ...yAxis\r\n            },\r\n            legend: {\r\n                ...this.customOptions.legend,\r\n                ...legend\r\n            },\r\n            plotBackground: {\r\n                ...this.customOptions.plotBackground,\r\n                ...plotBackground\r\n            },\r\n            plotOptions: {\r\n                ...this.customOptions.plotOptions,\r\n                ...plotOptions\r\n            },\r\n            header: {\r\n                ...this.customOptions.header,\r\n                ...header\r\n            }\r\n        };\r\n        this._options['barType']='vertical';\r\n    }\r\n    get options(): any {\r\n        return this._options;\r\n    }\r\n    @Input() categories: any=[];\r\n    @Input() series: any=[];\r\n\r\n    //@Input() groupBarPadding=20;\r\n    //@Input() innerBarPadding=3;\r\n\r\n    // scale: any;\r\n    xScale: any;\r\n    innerScale: any;\r\n    yScale: any;\r\n    yRightScale: any;\r\n    lines: any=[];\r\n    bars: any=[];\r\n    lineCircle: any=[];\r\n    groupName: any[]=[];\r\n    groupBarPaddingBK: any;\r\n    innerBarPaddingBK: any;\r\n    colorScale: any;\r\n\r\n    constructor(\r\n        private chartElement: ElementRef,\r\n        private cdr: ChangeDetectorRef) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.groupBarPaddingBK=this.options.plotOptions.groupBarPadding;\r\n        this.innerBarPaddingBK=this.options.plotOptions.innerBarPadding;\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.options.width=this.options.width;\r\n        this.options.height=this.options.height;\r\n\r\n        this.update();\r\n    }\r\n\r\n    update(): void {\r\n        // console.log(\"ttttttt\",this.options)\r\n        const hostElem=this.chartElement.nativeElement;\r\n        let dims=hostElem.parentNode!==null? hostElem.parentNode.getBoundingClientRect():{ height: 400, width: 800 };\r\n\r\n        var style=hostElem.parentNode.currentStyle||window.getComputedStyle(hostElem.parentNode);\r\n\r\n        this.options.height=!this.options.height? dims.height-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight):this.options.height;\r\n        this.options.width=!this.options.width? dims.width-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight):dims.width-this.strToNumber(style.paddingLeft)-this.strToNumber(style.paddingRight);\r\n\r\n        this.calPlotBackground()\r\n\r\n        let countFlag=false;\r\n        this.options.plotOptions.groupBarPadding=this.groupBarPaddingBK;\r\n        this.options.plotOptions.innerBarPadding=this.innerBarPaddingBK;\r\n        do {\r\n            if (countFlag==true) {\r\n                this.options.plotOptions.groupBarPadding--;\r\n                this.options.plotOptions.innerBarPadding=2;\r\n            }\r\n            if (this.options.barType=='vertical') {\r\n                this.xScale=this.getXScale();\r\n            }\r\n            else {\r\n                // this.yScale=this.getXScale();\r\n            }\r\n            this.innerScale=this.getInnerScale();\r\n            countFlag=true;\r\n        } while (this.innerScale.bandwidth()<2);\r\n        // \r\n\r\n        if (this.options.barType=='vertical') {\r\n            this.yScale=this.getYScale();\r\n            this.yRightScale=this.getYRightScale();\r\n        }\r\n        else {\r\n            // this.xScale=this.getYScale();\r\n        }\r\n\r\n        let colorHelper=new ColorHelper(this.options, this.series);\r\n        this.colorScale=colorHelper.generateColorScale();\r\n\r\n        setTimeout(() => {\r\n            this.groupName=[];\r\n            this.series.map(item => {\r\n                if (item.name) {\r\n                    this.groupName.push({\r\n                        name: item.name,\r\n                        color: this.colorScale(item.name)\r\n                    });\r\n                }\r\n            })\r\n            this.createBar();\r\n            this.createLine();\r\n        });\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    getXScale(): any {\r\n\r\n        let spacing;\r\n        let range;\r\n        if (this.options.barType=='vertical') {\r\n            spacing=(this.categories.length/(this.options.plotBackground.width/this.options.plotOptions.groupBarPadding));\r\n            range=[0, this.options.plotBackground.width];\r\n        }\r\n        else {\r\n            // let length=this.options.height-this.options.header.height;\r\n            // spacing=(this.categories.length/(this.options.plotBackground.height/this.options.plotOptions.groupBarPadding));\r\n            // range=[0, this.options.plotBackground.height];\r\n        }\r\n        return scaleBand()\r\n            .range(range)\r\n            .paddingInner(spacing)\r\n            .paddingOuter(0.1)\r\n            .domain(this.categories);\r\n    }\r\n    getInnerScale(): any {\r\n\r\n        let groupDataArr=[];\r\n        for (let i=0; i<this.series.length; i++) {\r\n            if (this.series[i].type==\"verticalBar\") {\r\n                groupDataArr.push(this.series[i].name);\r\n            }\r\n        }\r\n\r\n        let spacing;\r\n        let range;\r\n        let length=0;\r\n        for (let i=0; i<this.series.length; i++) {\r\n            if (this.series[i].type==\"verticalBar\") {\r\n                length++;\r\n            }\r\n        }\r\n        if (this.options.barType=='vertical') {\r\n            spacing=(length/(this.xScale.bandwidth()/this.options.plotOptions.innerBarPadding));\r\n            range=this.xScale.bandwidth();\r\n        }\r\n        else {\r\n            // spacing=(length/(this.yScale.bandwidth()/this.options.plotOptions.innerBarPadding));\r\n            // range=this.yScale.bandwidth();\r\n        }\r\n\r\n        return scaleBand()\r\n            .range([0, range])\r\n            .paddingInner(spacing)\r\n            .domain(groupDataArr);\r\n    }\r\n\r\n    getYScale(): any {\r\n        let uniqueValue: any=new Set();\r\n        this.series.map((item) => {\r\n            if (item.type==\"verticalBar\") {\r\n                item.data.map((value) => {\r\n                    uniqueValue.add(value);\r\n                });\r\n            }\r\n        });\r\n\r\n        let min=Math.min(...uniqueValue);\r\n        min=min>0? 0:min;\r\n\r\n        let max=Math.max(0, ...uniqueValue);\r\n        max=max>0? max:0;\r\n\r\n        let range=[];\r\n        if (this.options.barType=='vertical') {\r\n            let value=this.options.plotBackground.height;\r\n            range=[value, 0];\r\n        }\r\n        // else {\r\n        //     let value=this.options.plotBackground.width-30;\r\n        //     range=[0, value];\r\n        // }\r\n\r\n        // console.log(\"bar getYScale --- \", range, min, max)\r\n\r\n        return scaleLinear()\r\n            .range(range)\r\n            .domain([min, max]);\r\n        //return this.scale.nice().ticks();\r\n    }\r\n    getYRightScale() {\r\n        let uniqueValue: any=new Set();\r\n        this.series.map((item) => {\r\n            if (item.type==\"line\"||item.type==undefined) {\r\n                item.data.map((value) => {\r\n                    uniqueValue.add(value);\r\n                });\r\n            }\r\n        });\r\n\r\n        let min=Math.min(...uniqueValue);\r\n        min=min>0? 0:min;\r\n\r\n        let max=Math.max(0, ...uniqueValue);\r\n        max=max>0? max:0;\r\n\r\n        let range=[];\r\n        if (this.options.barType=='vertical') {\r\n            let value=this.options.plotBackground.height;\r\n            range=[value, 0];\r\n        }\r\n        // else {\r\n        //     let value=this.options.plotBackground.width-30;\r\n        //     range=[0, value];\r\n        // }\r\n\r\n        // console.log(\"bar getYScale --- \", range, min, max)\r\n\r\n        return scaleLinear()\r\n            .range(range)\r\n            .domain([min, max]);\r\n    }\r\n\r\n\r\n    calPlotBackground() {\r\n        this.options={\r\n            ...this.options,\r\n            plotBackground: {\r\n                ...this.options.plotBackground,\r\n                x: 0,\r\n                y: 0,\r\n                height: this.options.height-this.options.xAxis.height-this.options.header.height-this.options.padding,\r\n                width: this.options.width-this.options.yAxis.width-this.options.padding-this.options.yAxis.rightWidth\r\n            }\r\n        }\r\n        // console.log(\"calPlotBackground\", JSON.stringify(this.options));\r\n    }\r\n    createLine() {\r\n        //console.log(\"this.innerScale.bandwidth() \"+this.innerScale.bandwidth())\r\n        this.lines=[];\r\n        this.lineCircle=[];\r\n        for (let i=0; i<this.series.length; i++) {\r\n            if (this.series[i].type==\"line\"||this.series[i].type==undefined) {\r\n                let line={ points: \"\", color: \"\" }\r\n                for (let j=0; j<this.categories.length; j++) {\r\n                    let x=this.xScale(this.categories[j])+(this.xScale.bandwidth()/2)+this.options.yAxis.width;\r\n                    let y=this.yRightScale(this.series[i].data[j])+this.options.header.height\r\n                    line.points+=(x+\",\"+y+\" \");\r\n                    line.color=this.colorScale(this.series[i].name);\r\n                    this.lineCircle.push({\r\n                        x,\r\n                        y,\r\n                        color: this.colorScale(this.series[i].name),\r\n                        value: this.categories[j],  //jan,feb\r\n                        data: this.series[i].data[j], //101,202\r\n                        group: this.series[i].name\r\n                    });\r\n                }\r\n                this.lines.push(line);\r\n            }\r\n        }\r\n    }\r\n    createBar() {\r\n        this.bars=[];\r\n        this.categories.map((item, index) => {\r\n            for (let i=0; i<this.series.length; i++) {\r\n                if (this.series[i].type==\"verticalBar\") {\r\n                    const bar: any={\r\n                        value: item,  //jan,feb\r\n                        data: this.series[i].data[index], //101,202\r\n                        group: this.series[i].name,\r\n                        color: this.colorScale(this.series[i].name),\r\n                        width: this.innerScale.bandwidth(),\r\n                        height: this.series[i].data[index]>0? (this.yScale(0)-this.yScale(this.series[i].data[index])):(this.yScale(this.series[i].data[index])-this.yScale(0)),\r\n                        x: this.innerScale(this.series[i].name)+this.xScale(item),\r\n                        y: this.series[i].data[index]>0? this.yScale(this.series[i].data[index]):this.yScale(0),\r\n                        className: \"vertical_bar\"\r\n                    };\r\n                    this.bars.push(bar);\r\n                }\r\n            }\r\n        });\r\n        // console.log(\"this.bars=[] \", this.bars)\r\n    }\r\n\r\n    yAxisWidthChange({ yAxisWidth, yAxisHeight, yAxisRightWidth }) {\r\n        this.options={\r\n            ...this.options,\r\n            yAxis: {\r\n                ...this.options.yAxis,\r\n                width: yAxisWidth,\r\n                height: yAxisHeight,\r\n                rightWidth: yAxisRightWidth\r\n            }\r\n        }\r\n        this.update()\r\n    }\r\n\r\n    xAxisHeightChange({ xAxisHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            xAxis: {\r\n                ...this.options.xAxis,\r\n                height: xAxisHeight\r\n            }\r\n        }\r\n        //console.log(\"xAxisHeightChange\", xAxisHeight, JSON.stringify(this.options.xAxis));\r\n        this.update()\r\n    }\r\n    headerHeightChange({ headerHeight }) {\r\n        this.options={\r\n            ...this.options,\r\n            header: {\r\n                ...this.options.header,\r\n                height: headerHeight\r\n            }\r\n        }\r\n        this.update()\r\n    }\r\n\r\n\r\n    toolTipPlaccement(data) {\r\n        if (this.options.barType=='vertical') {\r\n            return data>0? 'top':'bottom'\r\n        }\r\n        else {\r\n            return data>0? 'right':'left'\r\n        }\r\n    }\r\n    @HostListener('window:resize', ['$event'])\r\n    onResize(event) {\r\n        //console.log(\"window:resize\")\r\n        setTimeout(() => this.update());\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private strToNumber(str) {\r\n        let numberPattern=/\\d+/g;\r\n        let num=str.match(numberPattern).join('')\r\n        return parseFloat(num);\r\n    }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AxesModule } from '../axes/axes.module';\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { LegendModule } from '../legend/legend.module';\r\nimport { ngxChartsComboComponent } from \"./ngx-charts-combo.component\";\r\nimport { TooltipModule } from '../tooltip/tooltip.module';\r\n\r\n@NgModule({\r\n    declarations: [ngxChartsComboComponent],\r\n    imports: [CommonModule, AxesModule, HeaderModule, LegendModule, TooltipModule],\r\n    exports: [ngxChartsComboComponent],\r\n    providers: [],\r\n})\r\nexport class ngxChartsComboModule { }\r\n"]}